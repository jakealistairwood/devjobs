[{"/Users/jakewood/development/frontendmentor/devjobs/src/App.jsx":"1","/Users/jakewood/development/frontendmentor/devjobs/src/containers/Routes.jsx":"2","/Users/jakewood/development/frontendmentor/devjobs/src/containers/Home/index.js":"3","/Users/jakewood/development/frontendmentor/devjobs/src/components/Searchbar/Searchbar.jsx":"4","/Users/jakewood/development/frontendmentor/devjobs/src/components/JobCard/JobCard.jsx":"5","/Users/jakewood/development/frontendmentor/devjobs/src/components/Searchbar/index.js":"6","/Users/jakewood/development/frontendmentor/devjobs/src/components/JobInfo/JobInfo.jsx":"7","/Users/jakewood/development/frontendmentor/devjobs/src/themes.js":"8","/Users/jakewood/development/frontendmentor/devjobs/src/components/Switch/Switch.jsx":"9","/Users/jakewood/development/frontendmentor/devjobs/src/components/JobLibrary/JobLibrary.jsx":"10","/Users/jakewood/development/frontendmentor/devjobs/src/components/JobLibrary/index.js":"11","/Users/jakewood/development/frontendmentor/devjobs/src/components/Switch/index.js":"12","/Users/jakewood/development/frontendmentor/devjobs/src/containers/Home/Home.jsx":"13","/Users/jakewood/development/frontendmentor/devjobs/src/containers/Register/Register.jsx":"14","/Users/jakewood/development/frontendmentor/devjobs/src/containers/Login/Login.jsx":"15","/Users/jakewood/development/frontendmentor/devjobs/src/containers/Login/index.js":"16","/Users/jakewood/development/frontendmentor/devjobs/src/components/JobCard/index.js":"17","/Users/jakewood/development/frontendmentor/devjobs/src/containers/Register/index.js":"18","/Users/jakewood/development/frontendmentor/devjobs/src/firebase.js":"19","/Users/jakewood/development/frontendmentor/devjobs/src/components/JobInfo/index.js":"20"},{"size":6333,"mtime":1607360642277,"results":"21","hashOfConfig":"22"},{"size":2730,"mtime":1607343914749,"results":"23","hashOfConfig":"22"},{"size":48,"mtime":1605963668393,"results":"24","hashOfConfig":"22"},{"size":2428,"mtime":1607354936658,"results":"25","hashOfConfig":"22"},{"size":1345,"mtime":1607085903961,"results":"26","hashOfConfig":"22"},{"size":63,"mtime":1605648144031,"results":"27","hashOfConfig":"22"},{"size":2542,"mtime":1606046494537,"results":"28","hashOfConfig":"22"},{"size":1297,"mtime":1607355361071,"results":"29","hashOfConfig":"22"},{"size":808,"mtime":1607340220960,"results":"30","hashOfConfig":"22"},{"size":1335,"mtime":1607344648076,"results":"31","hashOfConfig":"22"},{"size":66,"mtime":1605648014989,"results":"32","hashOfConfig":"22"},{"size":54,"mtime":1607004796483,"results":"33","hashOfConfig":"22"},{"size":1375,"mtime":1607359504966,"results":"34","hashOfConfig":"22"},{"size":2715,"mtime":1607360705106,"results":"35","hashOfConfig":"22"},{"size":2036,"mtime":1607360494586,"results":"36","hashOfConfig":"22"},{"size":51,"mtime":1607117351526,"results":"37","hashOfConfig":"22"},{"size":57,"mtime":1605648206695,"results":"38","hashOfConfig":"22"},{"size":60,"mtime":1607105679274,"results":"39","hashOfConfig":"22"},{"size":669,"mtime":1605993218285,"results":"40","hashOfConfig":"22"},{"size":57,"mtime":1605648282256,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"sxajiq",{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/jakewood/development/frontendmentor/devjobs/src/App.jsx",["90","91","92","93","94","95","96"],"/Users/jakewood/development/frontendmentor/devjobs/src/containers/Routes.jsx",["97"],"import React from 'react';\nimport { Router } from '@reach/router';\nimport JobInfo from '../components/JobInfo';\nimport JobLibrary from '../components/JobLibrary';\nimport Searchbar from '../components/Searchbar';\nimport Home from '../containers/Home';\nimport Register from '../containers/Register';\nimport Login from '../containers/Login';\n\nconst Routes = (props) => {\n\n    const { jobs, \n            getJobs,\n            jobsOnDisplay, \n            setJobsOnDisplay, \n            searchJobs, \n            setSearchJobs, \n            jobLocation, \n            setJobLocation,\n            fullTime,\n            setFullTime,\n            firstName,\n            setFirstName,\n            email,\n            setEmail,\n            password,\n            setPassword,\n            handleUserLogin,\n            handleUserSignUp,\n            checkUserExists,\n            userHasAccount,\n            setUserHasAccount,\n            userEmailError,\n            userPasswordError\n        } = props;\n\n    return (\n        <Router>\n            <Home path=\"/\" />\n            <Register \n                path=\"register\"\n                firstName={firstName}\n                setFirstName={setFirstName}\n                email={email}\n                setEmail={setEmail}\n                password={password}\n                setPassword={setPassword} \n                handleUserSignUp={handleUserSignUp}\n                checkUserExists={checkUserExists}\n                userEmailError={userEmailError}\n                userPasswordError={userPasswordError}\n                userHasAccount={userHasAccount}\n            />\n            <Login \n                path=\"login\"\n                email={email}\n                setEmail={setEmail}\n                password={password}\n                setPassword={setPassword}\n                handleUserLogin={handleUserLogin}\n                checkUserExists={checkUserExists}\n                userHasAccount={userHasAccount}\n                setUserHasAccount={setUserHasAccount}\n                userEmailError={userEmailError}\n                userPasswordError={userPasswordError} \n            />\n            <JobLibrary \n                path=\"job-library\" \n                getJobs={getJobs} \n                jobs={jobs} \n                jobsOnDisplay={jobsOnDisplay}\n                setJobsOnDisplay={setJobsOnDisplay}\n                searchJobs={searchJobs} \n                setSearchJobs={setSearchJobs}\n                jobLocation={jobLocation}\n                setJobLocation={setJobLocation}\n                fullTime={fullTime}\n                setFullTime={setFullTime}\n            />\n            <JobInfo path=\"job-library/job-description/:jobID\" jobs={jobs}/>    \n        </Router>\n    )\n}\n\nexport default Routes;\n",["98","99"],"/Users/jakewood/development/frontendmentor/devjobs/src/containers/Home/index.js",[],["100","101"],"/Users/jakewood/development/frontendmentor/devjobs/src/components/Searchbar/Searchbar.jsx",["102","103","104","105"],"import React from 'react';\nimport styles from './Searchbar.module.scss';\nimport SearchIcon from '../../assets/design/Desktop/icon-search.svg';\nimport FilterIcon from '../../assets/design/Desktop/icon-location.svg';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme, GlobalStyles } from \"../../themes\";\n\nconst StyledSearch = styled.form`\n    background-color: ${props => props.theme.form}\n`\nconst StyledLabel = styled.label`\n    color: ${props => props.theme.ftLabel}\n`\n\nconst Searchbar = (props) => {\n\n    const { getJobs,  \n            searchJobs, \n            setSearchJobs, \n            jobLocation, \n            setJobLocation,\n            fullTime,\n            setFullTime } = props;\n\n    return (\n        <StyledSearch className={styles.search}>\n            <div className={styles.search__filterOne}>\n                <img src={SearchIcon} alt=\"magnifying-glass-icon\" />\n                <label for=\"searchByJob\"></label>\n                <input \n                    type=\"text\" \n                    id=\"searchByJob\" \n                    placeholder=\"Filter by title, companies, expertise...\"\n                    value={searchJobs}\n                    onChange={(e) => {\n                        setSearchJobs(e.target.value);\n                        getJobs();\n                    }} \n                />\n            </div>\n            <div className={styles.search__filterTwo}>\n                <img src={FilterIcon} alt=\"location-pin-icon\" />\n                <label for=\"searchByLocation\"></label>\n                <input type=\"text\" \n                       id=\"searchByLocation\" \n                       placeholder=\"Filter by location...\"\n                       value={jobLocation}\n                       onChange={(e) => {\n                           setJobLocation(e.target.value)\n                           getJobs();\n                       }}\n                />\n            </div>  \n            <div className={styles.search__filterThree}>\n                <input type=\"checkbox\" id=\"fullTimeCheckbox\" onClick={() => {\n                    setFullTime(!fullTime)\n                    getJobs();\n                }} />\n                <StyledLabel for=\"fullTimeCheckbox\" className={styles.fullTimeLabel}>Full Time Only</StyledLabel>\n                <button className={styles.primaryBtn}>Search</button>\n            </div>   \n        </StyledSearch>   \n    )\n}\n\nexport default Searchbar;\n","/Users/jakewood/development/frontendmentor/devjobs/src/components/JobCard/JobCard.jsx",["106","107","108","109"],"import React from 'react';\nimport styles from './JobCard.module.scss';\nimport { Link } from '@reach/router';\nimport  styled, { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme, GlobalStyles } from \"../../themes\";\n\nconst JobCard = (props) => {\n\n    const { job } = props;\n\n    const jobID = props.job.id;\n\n    const StyledCard = styled.div`\n        background-color: ${props => props.theme.cardBg}\n    `\n\n    return (\n            <Link to={`job-description/${jobID}`} job={job} >\n            <StyledCard>\n            <div className={styles.card}>\n                <div className={styles.card__logo}>\n                    <img src={job.company_logo} alt=\"logo-of-company\" />            \n                </div>\n                <div className={styles.card__jobInfo}>\n                    <div className={styles.card__header}>\n                        <p>5h ago . {job.type}</p>\n                    </div>\n                    <div className={styles.card__description}>\n                        <h3>{job.title}</h3>\n                        <p className={styles.card__jobCompany}>{job.company}</p>\n                    </div>\n                    <p className={styles.card__jobLocation}>{job.location}</p>    \n                </div>    \n            </div>\n            </StyledCard>\n            </Link>\n    )\n}\n\nexport default JobCard;\n","/Users/jakewood/development/frontendmentor/devjobs/src/components/Searchbar/index.js",[],"/Users/jakewood/development/frontendmentor/devjobs/src/components/JobInfo/JobInfo.jsx",["110","111","112","113","114"],"import React, { useState, useEffect } from 'react';\nimport styles from './JobInfo.module.scss';\n\nconst JobInfo = (props) => {\n\n    const [ currentJob, setCurrentJob ] = useState(0);\n\n    useEffect(() => {\n        setCurrentJob(props.jobID);\n    }, [props.jobID])\n\n    console.log(props.jobID);\n\n    return (\n        <div className={styles.pageContainer}>\n            <header className={styles.jobHeader}>\n                <div className={styles.headerImg}>\n                    <img></img>\n                </div>\n                <div className={styles.headerContent}>\n                    <div>\n                        <h3>So Digital</h3>\n                        <p>sodigital.co</p>\n                    </div>\n                    <button className={styles.secondaryBtn}>Company Site</button>\n                </div>\n            </header>\n            <main className={styles.jobDescription}>\n                <section className={styles.overviewHeader}>\n                    <div className={styles.overviewHeaderInfo}>\n                        <p>1w ago . Part Time</p>\n                        <h2>Senior Software Engineer</h2>\n                        <p className={styles.jobLocations}>Remote, Seoul, Tokyo, Mountain View, San Francisco</p>\n                    </div>\n                    <button className={styles.primaryBtn}>Apply Now</button>\n                </section>\n                <section className={styles.overviewContent}>\n                    <p></p>\n                    <a href=\"#\">See more about our teams here</a>\n                </section> \n                <section className={styles.jobRequirements}>\n                    <h4>Requirements</h4>\n                    <p></p>\n                    <ul>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                    </ul>\n                </section>\n                <section className={styles.jobContext}>\n                    <h4>What You Will Do</h4>\n                    <p></p>\n                    <p></p>\n                    <ol>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                    </ol>\n                </section>\n            </main>\n            <aside className={styles.howToApply}>\n                <h3>How to Apply</h3>\n                <p></p>\n                <a href=\"#\"></a>\n            </aside>\n            <footer>\n\n            </footer>\n        </div>\n    )\n}\n\nexport default JobInfo;\n","/Users/jakewood/development/frontendmentor/devjobs/src/themes.js",[],"/Users/jakewood/development/frontendmentor/devjobs/src/components/Switch/Switch.jsx",["115","116"],"import React from 'react';\nimport styles from './Switch.module.scss';\nimport SunIcon from '../../assets/design/Desktop/icon-sun.svg';\nimport MoonIcon from '../../assets/design/Desktop/icon-moon.svg';\n\nconst Switch = (props) => {\n\n    const { isToggled, onToggle, toggleTheme } = props;\n\n    return (\n        <div className={styles.toggleContainer}>\n            <img src={SunIcon} />\n            <label id=\"toggleSwitch\" className={styles.themeSwitch}>\n                <input type=\"checkbox\" id=\"toggleSwitch\" checked={isToggled} onChange={() =>{\n                    onToggle()\n                    toggleTheme()\n                }}\n                />\n                <span className={styles.themeSlider} />\n            </label>\n            <img src={MoonIcon} />\n        </div>\n    )\n}\n\nexport default Switch;\n","/Users/jakewood/development/frontendmentor/devjobs/src/components/JobLibrary/JobLibrary.jsx",[],"/Users/jakewood/development/frontendmentor/devjobs/src/components/JobLibrary/index.js",[],"/Users/jakewood/development/frontendmentor/devjobs/src/components/Switch/index.js",[],"/Users/jakewood/development/frontendmentor/devjobs/src/containers/Home/Home.jsx",[],"/Users/jakewood/development/frontendmentor/devjobs/src/containers/Register/Register.jsx",["117"],"/Users/jakewood/development/frontendmentor/devjobs/src/containers/Login/Login.jsx",["118","119","120","121"],"import React from 'react';\nimport styles from './Login.module.scss';\nimport { Link } from '@reach/router';\nimport styled from 'styled-components';\n\nconst StyledLabel = styled.label`\n    color: ${props => props.theme.registerLabel};\n    letter-spacing: 0.1em;\n`\n\nconst StyledInput = styled.input`\n    color: ${props => props.theme.registerInput}\n`\n\nconst Login = (props) => { \n\n    const { email, \n            setEmail, \n            password, \n            setPassword, \n            handleUserLogin,\n            handleUserSignup,\n            userHasAccount,\n            setUserHasAccount,\n            userEmailError,\n            userPasswordError \n        } = props;\n\n    return (\n        <div className={styles.formContainer}>\n            <form className={styles.registerForm} onSubmit={handleUserLogin}>\n                <h3>Have an account? Login below!</h3>\n                <StyledLabel htmlFor=\"userEmail\">Email</StyledLabel>\n                <StyledInput \n                    type=\"text\" \n                    autoFocus \n                    required \n                    value={email} \n                    id=\"userEmail\" \n                    placeholder=\"Please enter your email...\"\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n                <p className={styles.errorMessage}>{userEmailError}</p>\n                <StyledLabel htmlFor=\"userPassword\">Password</StyledLabel>\n                <StyledInput \n                    type=\"password\" \n                    id=\"userPassword\" \n                    placeholder=\"Please enter your password...\"\n                    required\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)} \n                />\n                <p className={styles.errorMessage}>{userPasswordError}</p>\n                <div className={styles.formBtns}>\n                    <button type=\"submit\" className={styles.primaryBtn}>Login</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Login;\n","/Users/jakewood/development/frontendmentor/devjobs/src/containers/Login/index.js",[],"/Users/jakewood/development/frontendmentor/devjobs/src/components/JobCard/index.js",[],"/Users/jakewood/development/frontendmentor/devjobs/src/containers/Register/index.js",[],"/Users/jakewood/development/frontendmentor/devjobs/src/firebase.js",[],"/Users/jakewood/development/frontendmentor/devjobs/src/components/JobInfo/index.js",[],{"ruleId":"122","severity":1,"message":"123","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":18},{"ruleId":"122","severity":1,"message":"126","line":6,"column":8,"nodeType":"124","messageId":"125","endLine":6,"endColumn":20},{"ruleId":"122","severity":1,"message":"127","line":33,"column":11,"nodeType":"124","messageId":"125","endLine":33,"endColumn":15},{"ruleId":"128","severity":1,"message":"129","line":73,"column":7,"nodeType":"130","messageId":"131","endLine":82,"endColumn":8},{"ruleId":"128","severity":1,"message":"129","line":91,"column":7,"nodeType":"130","messageId":"131","endLine":99,"endColumn":8},{"ruleId":"122","severity":1,"message":"132","line":106,"column":9,"nodeType":"124","messageId":"125","endLine":106,"endColumn":25},{"ruleId":"133","severity":1,"message":"134","line":150,"column":6,"nodeType":"135","endLine":150,"endColumn":8,"suggestions":"136"},{"ruleId":"122","severity":1,"message":"137","line":5,"column":8,"nodeType":"124","messageId":"125","endLine":5,"endColumn":17},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"138","replacedBy":"142"},{"ruleId":"140","replacedBy":"143"},{"ruleId":"122","severity":1,"message":"144","line":5,"column":18,"nodeType":"124","messageId":"125","endLine":5,"endColumn":31},{"ruleId":"122","severity":1,"message":"145","line":6,"column":10,"nodeType":"124","messageId":"125","endLine":6,"endColumn":20},{"ruleId":"122","severity":1,"message":"146","line":6,"column":22,"nodeType":"124","messageId":"125","endLine":6,"endColumn":31},{"ruleId":"122","severity":1,"message":"147","line":6,"column":33,"nodeType":"124","messageId":"125","endLine":6,"endColumn":45},{"ruleId":"122","severity":1,"message":"144","line":4,"column":19,"nodeType":"124","messageId":"125","endLine":4,"endColumn":32},{"ruleId":"122","severity":1,"message":"145","line":5,"column":10,"nodeType":"124","messageId":"125","endLine":5,"endColumn":20},{"ruleId":"122","severity":1,"message":"146","line":5,"column":22,"nodeType":"124","messageId":"125","endLine":5,"endColumn":31},{"ruleId":"122","severity":1,"message":"147","line":5,"column":33,"nodeType":"124","messageId":"125","endLine":5,"endColumn":45},{"ruleId":"122","severity":1,"message":"148","line":6,"column":13,"nodeType":"124","messageId":"125","endLine":6,"endColumn":23},{"ruleId":"149","severity":1,"message":"150","line":18,"column":21,"nodeType":"151","endLine":18,"endColumn":26},{"ruleId":"152","severity":1,"message":"153","line":39,"column":21,"nodeType":"151","endLine":39,"endColumn":33},{"ruleId":"154","severity":1,"message":"155","line":66,"column":17,"nodeType":"151","endLine":66,"endColumn":29},{"ruleId":"152","severity":1,"message":"153","line":66,"column":17,"nodeType":"151","endLine":66,"endColumn":29},{"ruleId":"149","severity":1,"message":"150","line":12,"column":13,"nodeType":"151","endLine":12,"endColumn":34},{"ruleId":"149","severity":1,"message":"150","line":21,"column":13,"nodeType":"151","endLine":21,"endColumn":35},{"ruleId":"122","severity":1,"message":"156","line":24,"column":13,"nodeType":"124","messageId":"125","endLine":24,"endColumn":27},{"ruleId":"122","severity":1,"message":"157","line":3,"column":10,"nodeType":"124","messageId":"125","endLine":3,"endColumn":14},{"ruleId":"122","severity":1,"message":"158","line":22,"column":13,"nodeType":"124","messageId":"125","endLine":22,"endColumn":29},{"ruleId":"122","severity":1,"message":"156","line":23,"column":13,"nodeType":"124","messageId":"125","endLine":23,"endColumn":27},{"ruleId":"122","severity":1,"message":"159","line":24,"column":13,"nodeType":"124","messageId":"125","endLine":24,"endColumn":30},"no-unused-vars","'JobLibrary' is defined but never used.","Identifier","unusedVar","'NavbarBanner' is defined but never used.","'user' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'handleUserLogOut' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkUserExists' and 'getJobs'. Either include them or remove the dependency array.","ArrayExpression",["160"],"'Searchbar' is defined but never used.","no-native-reassign",["161"],"no-negated-in-lhs",["162"],["161"],["162"],"'ThemeProvider' is defined but never used.","'lightTheme' is defined but never used.","'darkTheme' is defined but never used.","'GlobalStyles' is defined but never used.","'currentJob' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'userHasAccount' is assigned a value but never used.","'Link' is defined but never used.","'handleUserSignup' is assigned a value but never used.","'setUserHasAccount' is assigned a value but never used.",{"desc":"163","fix":"164"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [checkUserExists, getJobs]",{"range":"165","text":"166"},[4517,4519],"[checkUserExists, getJobs]"]