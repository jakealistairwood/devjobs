[{"/Users/jakewood/development/frontendmentor/devjobs/src/App.jsx":"1","/Users/jakewood/development/frontendmentor/devjobs/src/containers/Routes.jsx":"2","/Users/jakewood/development/frontendmentor/devjobs/src/containers/Home/index.js":"3","/Users/jakewood/development/frontendmentor/devjobs/src/components/Searchbar/Searchbar.jsx":"4","/Users/jakewood/development/frontendmentor/devjobs/src/components/JobCard/JobCard.jsx":"5","/Users/jakewood/development/frontendmentor/devjobs/src/components/Searchbar/index.js":"6","/Users/jakewood/development/frontendmentor/devjobs/src/components/JobInfo/JobInfo.jsx":"7","/Users/jakewood/development/frontendmentor/devjobs/src/themes.js":"8","/Users/jakewood/development/frontendmentor/devjobs/src/components/Switch/Switch.jsx":"9","/Users/jakewood/development/frontendmentor/devjobs/src/components/JobLibrary/JobLibrary.jsx":"10","/Users/jakewood/development/frontendmentor/devjobs/src/components/JobLibrary/index.js":"11","/Users/jakewood/development/frontendmentor/devjobs/src/components/Switch/index.js":"12"},{"size":3350,"mtime":1607014682769,"results":"13","hashOfConfig":"14"},{"size":1129,"mtime":1607014669848,"results":"15","hashOfConfig":"14"},{"size":48,"mtime":1605963668393,"results":"16","hashOfConfig":"14"},{"size":1948,"mtime":1605981385238,"results":"17","hashOfConfig":"14"},{"size":1345,"mtime":1607017910281,"results":"18","hashOfConfig":"14"},{"size":63,"mtime":1605648144031,"results":"19","hashOfConfig":"14"},{"size":2542,"mtime":1606046494537,"results":"20","hashOfConfig":"14"},{"size":522,"mtime":1607017935985,"results":"21","hashOfConfig":"14"},{"size":804,"mtime":1607012519690,"results":"22","hashOfConfig":"14"},{"size":986,"mtime":1607014650080,"results":"23","hashOfConfig":"14"},{"size":66,"mtime":1605648014989,"results":"24","hashOfConfig":"14"},{"size":54,"mtime":1607004796483,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"sxajiq",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jakewood/development/frontendmentor/devjobs/src/App.jsx",["56","57","58"],"import React, { useState, useEffect } from 'react';\nimport JobLibrary from './components/JobLibrary/index';\nimport Routes from './containers/Routes';\nimport { Link } from '@reach/router';\nimport firebase from './firebase';\nimport NavbarBanner from './assets/design/Desktop/bg-pattern-header.svg';\nimport Logo from './assets/design/Desktop/logo.svg';\nimport './App.scss';\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme, GlobalStyles } from \"./themes\";\nimport Switch from './components/Switch';\n\nconst App = () => {\n\n  const StyledApp = styled.div`\n  `\n\n  const [ jobs, setJobs ] = useState([]);\n  const [ user, setUser ] = useState(null);\n  const [ searchJobs, setSearchJobs ] = useState();\n  const [ jobLocation, setJobLocation ] = useState();\n  const [ fullTime, setFullTime ] = useState(false);\n\n  // State for light/dark mode toggle button\n  const [ isToggled, setIsToggled ] = useState(false);\n\n  // State for setting light/dark mode theme\n  const [theme, setTheme] = useState(\"light\");\n\n  const toggleTheme = () => {\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\n  }\n\n  const getJobs = () => {\n\n    const searchByJobDescription = searchJobs ? `?description=${searchJobs}` : \"\";\n    const searchByJobLocation = jobLocation ? `?location=${jobLocation}` : \"\";\n    const jobFullTime = fullTime ? `?full_time=${fullTime}` : \"\";\n\n    const url = `https://jobs.github.com/positions.json${searchByJobDescription}${searchByJobLocation}${jobFullTime}`;\n\n    // Prevent CORS issue blocking access to Github jobs API\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\n    fetch(proxyurl + url)\n      .then((response) => response.json())\n      .then((response) =>  {\n        console.log(response);\n        setJobs(response);\n      })\n      .catch(() => console.log(\"Can't access \" + url + \" response. Blocked by browser?\"))\n  }\n\n  const checkUserSignedIn = () => {\n    firebase.auth().onAuthStateChanged((user) => {\n      (user) \n      ? \n        setUser(user)\n      : \n        setUser(null);\n    })\n  }\n\n  console.log(user);\n\n  useEffect(() => {\n    getJobs();\n    checkUserSignedIn();\n  }, []);\n\n  const renderJobs = jobs \n  ? <Routes jobs={jobs} \n            getJobs={getJobs} \n            searchJobs={searchJobs} \n            setSearchJobs={setSearchJobs} \n            jobLocation={jobLocation}\n            setJobLocation={setJobLocation}\n            fullTime={fullTime}\n            setFullTime={setFullTime}\n    /> \n  : <div className=\"loadingScreen\">Loading ...</div>\n\n  return (\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <GlobalStyles />\n      <StyledApp>\n      <header className=\"navbar\">\n        <nav className=\"navbar__container\">\n          <Link to=\"/\">\n            <img src={Logo} alt=\"devjobs-logo\" />\n          </Link>\n          <div className=\"navbar__toggle\">\n            {/* <img src={user.providerData[0].photoURL} alt=\"\"/> */}\n            <Switch isToggled={isToggled} \n                    onToggle={() => {\n                        setIsToggled(!isToggled)\n                    }} \n                    toggleTheme={toggleTheme}\n            />\n          </div>\n        </nav>\n      </header>\n      <main className=\"page__container\">\n        {renderJobs}\n      </main>\n      </StyledApp>\n    </ThemeProvider>\n  )\n}\n\nexport default App;\n\n",["59","60"],"/Users/jakewood/development/frontendmentor/devjobs/src/containers/Routes.jsx",["61"],"/Users/jakewood/development/frontendmentor/devjobs/src/containers/Home/index.js",[],"/Users/jakewood/development/frontendmentor/devjobs/src/components/Searchbar/Searchbar.jsx",["62","63"],"import React from 'react';\nimport styles from './Searchbar.module.scss';\nimport SearchIcon from '../../assets/design/Desktop/icon-search.svg';\nimport FilterIcon from '../../assets/design/Desktop/icon-location.svg';\n\nconst Searchbar = (props) => {\n\n    const { getJobs,  \n            searchJobs, \n            setSearchJobs, \n            jobLocation, \n            setJobLocation,\n            fullTime,\n            setFullTime } = props;\n\n    return (\n        <form className={styles.search}>\n            <div className={styles.search__filterOne}>\n                <img src={SearchIcon} alt=\"magnifying-glass-icon\" />\n                <label for=\"searchByJob\"></label>\n                <input \n                    type=\"text\" \n                    id=\"searchByJob\" \n                    placeholder=\"Filter by title, companies, expertise...\"\n                    onChange={e => {\n                        setSearchJobs(e.target.value);\n                        getJobs();\n                    }} \n                />\n            </div>\n            <div className={styles.search__filterTwo}>\n                <img src={FilterIcon} alt=\"location-pin-icon\" />\n                <label for=\"searchByLocation\"></label>\n                <input type=\"text\" \n                       id=\"searchByLocation\" \n                       placeholder=\"Filter by location...\"\n                       onInput={e => {\n                           setJobLocation(e.target.value)\n                           getJobs();\n                       }}\n                />\n            </div>  \n            <div className={styles.search__filterThree}>\n                <input type=\"checkbox\" onClick={() => {\n                    setFullTime(!fullTime)\n                    getJobs();\n                }} />\n                <label for=\"\">Full Time Only</label>\n                <button className={styles.primaryBtn}>Search</button>\n            </div>      \n        </form>\n    )\n}\n\nexport default Searchbar;\n","/Users/jakewood/development/frontendmentor/devjobs/src/components/JobCard/JobCard.jsx",["64","65","66","67"],"/Users/jakewood/development/frontendmentor/devjobs/src/components/Searchbar/index.js",[],["68","69"],"/Users/jakewood/development/frontendmentor/devjobs/src/components/JobInfo/JobInfo.jsx",["70","71","72","73","74"],"/Users/jakewood/development/frontendmentor/devjobs/src/themes.js",[],"/Users/jakewood/development/frontendmentor/devjobs/src/components/Switch/Switch.jsx",["75","76"],"import React from 'react';\nimport styles from './Switch.module.scss';\nimport SunIcon from '../../assets/design/Desktop/icon-sun.svg';\nimport MoonIcon from '../../assets/design/Desktop/icon-moon.svg';\n\nconst Switch = (props) => {\n\n    const { isToggled, onToggle, toggleTheme } = props;\n\n    return (\n        <div class={styles.toggleContainer}>\n            <img src={SunIcon} />\n            <label id=\"toggleSwitch\" className={styles.themeSwitch}>\n                <input type=\"checkbox\" id=\"toggleSwitch\" checked={isToggled} onChange={() =>{\n                    onToggle()\n                    toggleTheme()\n                }}\n                />\n                <span className={styles.themeSlider} />\n            </label>\n            <img src={MoonIcon} />\n        </div>\n    )\n}\n\nexport default Switch;\n",["77","78"],"/Users/jakewood/development/frontendmentor/devjobs/src/components/JobLibrary/JobLibrary.jsx",[],"/Users/jakewood/development/frontendmentor/devjobs/src/components/JobLibrary/index.js",[],"/Users/jakewood/development/frontendmentor/devjobs/src/components/Switch/index.js",[],{"ruleId":"79","severity":1,"message":"80","line":2,"column":8,"nodeType":"81","messageId":"82","endLine":2,"endColumn":18},{"ruleId":"79","severity":1,"message":"83","line":6,"column":8,"nodeType":"81","messageId":"82","endLine":6,"endColumn":20},{"ruleId":"84","severity":1,"message":"85","line":69,"column":6,"nodeType":"86","endLine":69,"endColumn":8,"suggestions":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"79","severity":1,"message":"92","line":5,"column":8,"nodeType":"81","messageId":"82","endLine":5,"endColumn":17},{"ruleId":"79","severity":1,"message":"93","line":9,"column":13,"nodeType":"81","messageId":"82","endLine":9,"endColumn":23},{"ruleId":"79","severity":1,"message":"94","line":11,"column":13,"nodeType":"81","messageId":"82","endLine":11,"endColumn":24},{"ruleId":"79","severity":1,"message":"95","line":4,"column":19,"nodeType":"81","messageId":"82","endLine":4,"endColumn":32},{"ruleId":"79","severity":1,"message":"96","line":5,"column":10,"nodeType":"81","messageId":"82","endLine":5,"endColumn":20},{"ruleId":"79","severity":1,"message":"97","line":5,"column":22,"nodeType":"81","messageId":"82","endLine":5,"endColumn":31},{"ruleId":"79","severity":1,"message":"98","line":5,"column":33,"nodeType":"81","messageId":"82","endLine":5,"endColumn":45},{"ruleId":"88","replacedBy":"99"},{"ruleId":"90","replacedBy":"100"},{"ruleId":"79","severity":1,"message":"101","line":6,"column":13,"nodeType":"81","messageId":"82","endLine":6,"endColumn":23},{"ruleId":"102","severity":1,"message":"103","line":18,"column":21,"nodeType":"104","endLine":18,"endColumn":26},{"ruleId":"105","severity":1,"message":"106","line":39,"column":21,"nodeType":"104","endLine":39,"endColumn":33},{"ruleId":"107","severity":1,"message":"108","line":66,"column":17,"nodeType":"104","endLine":66,"endColumn":29},{"ruleId":"105","severity":1,"message":"106","line":66,"column":17,"nodeType":"104","endLine":66,"endColumn":29},{"ruleId":"102","severity":1,"message":"103","line":12,"column":13,"nodeType":"104","endLine":12,"endColumn":34},{"ruleId":"102","severity":1,"message":"103","line":21,"column":13,"nodeType":"104","endLine":21,"endColumn":35},{"ruleId":"88","replacedBy":"109"},{"ruleId":"90","replacedBy":"110"},"no-unused-vars","'JobLibrary' is defined but never used.","Identifier","unusedVar","'NavbarBanner' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getJobs'. Either include it or remove the dependency array.","ArrayExpression",["111"],"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"'Searchbar' is defined but never used.","'searchJobs' is assigned a value but never used.","'jobLocation' is assigned a value but never used.","'ThemeProvider' is defined but never used.","'lightTheme' is defined but never used.","'darkTheme' is defined but never used.","'GlobalStyles' is defined but never used.",["112"],["113"],"'currentJob' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.",["112"],["113"],{"desc":"114","fix":"115"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getJobs]",{"range":"116","text":"117"},[2154,2156],"[getJobs]"]