[{"/Users/jakewood/development/frontendmentor/devjobs/src/App.jsx":"1","/Users/jakewood/development/frontendmentor/devjobs/src/containers/Routes.jsx":"2","/Users/jakewood/development/frontendmentor/devjobs/src/containers/Home/index.js":"3","/Users/jakewood/development/frontendmentor/devjobs/src/components/Searchbar/Searchbar.jsx":"4","/Users/jakewood/development/frontendmentor/devjobs/src/components/JobCard/JobCard.jsx":"5","/Users/jakewood/development/frontendmentor/devjobs/src/components/Searchbar/index.js":"6","/Users/jakewood/development/frontendmentor/devjobs/src/components/JobInfo/JobInfo.jsx":"7","/Users/jakewood/development/frontendmentor/devjobs/src/themes.js":"8","/Users/jakewood/development/frontendmentor/devjobs/src/components/Switch/Switch.jsx":"9","/Users/jakewood/development/frontendmentor/devjobs/src/components/JobLibrary/JobLibrary.jsx":"10","/Users/jakewood/development/frontendmentor/devjobs/src/components/JobLibrary/index.js":"11","/Users/jakewood/development/frontendmentor/devjobs/src/components/Switch/index.js":"12","/Users/jakewood/development/frontendmentor/devjobs/src/containers/Home/Home.jsx":"13","/Users/jakewood/development/frontendmentor/devjobs/src/containers/Register/Register.jsx":"14","/Users/jakewood/development/frontendmentor/devjobs/src/containers/Login/Login.jsx":"15","/Users/jakewood/development/frontendmentor/devjobs/src/containers/Login/index.js":"16","/Users/jakewood/development/frontendmentor/devjobs/src/components/JobCard/index.js":"17","/Users/jakewood/development/frontendmentor/devjobs/src/containers/Register/index.js":"18","/Users/jakewood/development/frontendmentor/devjobs/src/firebase.js":"19","/Users/jakewood/development/frontendmentor/devjobs/src/components/JobInfo/index.js":"20"},{"size":6376,"mtime":1607380582847,"results":"21","hashOfConfig":"22"},{"size":2681,"mtime":1607438674278,"results":"23","hashOfConfig":"22"},{"size":48,"mtime":1605963668393,"results":"24","hashOfConfig":"22"},{"size":2428,"mtime":1607354936658,"results":"25","hashOfConfig":"22"},{"size":1341,"mtime":1607434549941,"results":"26","hashOfConfig":"22"},{"size":63,"mtime":1605648144031,"results":"27","hashOfConfig":"22"},{"size":2662,"mtime":1607435134900,"results":"28","hashOfConfig":"22"},{"size":1297,"mtime":1607355361071,"results":"29","hashOfConfig":"22"},{"size":808,"mtime":1607340220960,"results":"30","hashOfConfig":"22"},{"size":1335,"mtime":1607344648076,"results":"31","hashOfConfig":"22"},{"size":66,"mtime":1605648014989,"results":"32","hashOfConfig":"22"},{"size":54,"mtime":1607004796483,"results":"33","hashOfConfig":"22"},{"size":1375,"mtime":1607359504966,"results":"34","hashOfConfig":"22"},{"size":2715,"mtime":1607360705106,"results":"35","hashOfConfig":"22"},{"size":2036,"mtime":1607360494586,"results":"36","hashOfConfig":"22"},{"size":51,"mtime":1607117351526,"results":"37","hashOfConfig":"22"},{"size":57,"mtime":1605648206695,"results":"38","hashOfConfig":"22"},{"size":60,"mtime":1607105679274,"results":"39","hashOfConfig":"22"},{"size":669,"mtime":1605993218285,"results":"40","hashOfConfig":"22"},{"size":57,"mtime":1605648282256,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"sxajiq",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"57"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"/Users/jakewood/development/frontendmentor/devjobs/src/App.jsx",["90","91","92","93","94","95"],"/Users/jakewood/development/frontendmentor/devjobs/src/containers/Routes.jsx",[],"/Users/jakewood/development/frontendmentor/devjobs/src/containers/Home/index.js",[],["96","97"],"/Users/jakewood/development/frontendmentor/devjobs/src/components/Searchbar/Searchbar.jsx",["98","99","100","101"],"import React from 'react';\nimport styles from './Searchbar.module.scss';\nimport SearchIcon from '../../assets/design/Desktop/icon-search.svg';\nimport FilterIcon from '../../assets/design/Desktop/icon-location.svg';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme, GlobalStyles } from \"../../themes\";\n\nconst StyledSearch = styled.form`\n    background-color: ${props => props.theme.form}\n`\nconst StyledLabel = styled.label`\n    color: ${props => props.theme.ftLabel}\n`\n\nconst Searchbar = (props) => {\n\n    const { getJobs,  \n            searchJobs, \n            setSearchJobs, \n            jobLocation, \n            setJobLocation,\n            fullTime,\n            setFullTime } = props;\n\n    return (\n        <StyledSearch className={styles.search}>\n            <div className={styles.search__filterOne}>\n                <img src={SearchIcon} alt=\"magnifying-glass-icon\" />\n                <label for=\"searchByJob\"></label>\n                <input \n                    type=\"text\" \n                    id=\"searchByJob\" \n                    placeholder=\"Filter by title, companies, expertise...\"\n                    value={searchJobs}\n                    onChange={(e) => {\n                        setSearchJobs(e.target.value);\n                        getJobs();\n                    }} \n                />\n            </div>\n            <div className={styles.search__filterTwo}>\n                <img src={FilterIcon} alt=\"location-pin-icon\" />\n                <label for=\"searchByLocation\"></label>\n                <input type=\"text\" \n                       id=\"searchByLocation\" \n                       placeholder=\"Filter by location...\"\n                       value={jobLocation}\n                       onChange={(e) => {\n                           setJobLocation(e.target.value)\n                           getJobs();\n                       }}\n                />\n            </div>  \n            <div className={styles.search__filterThree}>\n                <input type=\"checkbox\" id=\"fullTimeCheckbox\" onClick={() => {\n                    setFullTime(!fullTime)\n                    getJobs();\n                }} />\n                <StyledLabel for=\"fullTimeCheckbox\" className={styles.fullTimeLabel}>Full Time Only</StyledLabel>\n                <button className={styles.primaryBtn}>Search</button>\n            </div>   \n        </StyledSearch>   \n    )\n}\n\nexport default Searchbar;\n",["102","103"],"/Users/jakewood/development/frontendmentor/devjobs/src/components/JobCard/JobCard.jsx",["104","105","106","107"],"/Users/jakewood/development/frontendmentor/devjobs/src/components/Searchbar/index.js",[],["108","109"],"/Users/jakewood/development/frontendmentor/devjobs/src/components/JobInfo/JobInfo.jsx",["110","111","112","113","114","115"],"/Users/jakewood/development/frontendmentor/devjobs/src/themes.js",[],"/Users/jakewood/development/frontendmentor/devjobs/src/components/Switch/Switch.jsx",["116","117"],"import React from 'react';\nimport styles from './Switch.module.scss';\nimport SunIcon from '../../assets/design/Desktop/icon-sun.svg';\nimport MoonIcon from '../../assets/design/Desktop/icon-moon.svg';\n\nconst Switch = (props) => {\n\n    const { isToggled, onToggle, toggleTheme } = props;\n\n    return (\n        <div className={styles.toggleContainer}>\n            <img src={SunIcon} />\n            <label id=\"toggleSwitch\" className={styles.themeSwitch}>\n                <input type=\"checkbox\" id=\"toggleSwitch\" checked={isToggled} onChange={() =>{\n                    onToggle()\n                    toggleTheme()\n                }}\n                />\n                <span className={styles.themeSlider} />\n            </label>\n            <img src={MoonIcon} />\n        </div>\n    )\n}\n\nexport default Switch;\n","/Users/jakewood/development/frontendmentor/devjobs/src/components/JobLibrary/JobLibrary.jsx",[],"/Users/jakewood/development/frontendmentor/devjobs/src/components/JobLibrary/index.js",[],"/Users/jakewood/development/frontendmentor/devjobs/src/components/Switch/index.js",[],"/Users/jakewood/development/frontendmentor/devjobs/src/containers/Home/Home.jsx",[],"/Users/jakewood/development/frontendmentor/devjobs/src/containers/Register/Register.jsx",["118"],"import React from 'react';\nimport styles from './Register.module.scss';\nimport { Link } from '@reach/router';\nimport styled from 'styled-components';\n\nconst StyledLabel = styled.label`\n    color: ${props => props.theme.registerLabel};\n    letter-spacing: 0.1em;\n`\n\nconst StyledInput = styled.input`\n    color: ${props => props.theme.registerInput}\n`\n\nconst Register = (props) => {\n\n    const { firstName, \n            setFirstName,\n            email,\n            setEmail,\n            password,\n            setPassword,\n            handleUserSignUp, \n            userHasAccount,\n            userEmailError, \n            userPasswordError \n        } = props;\n\n    return (\n        <div className={styles.formContainer}>\n            <form className={styles.registerForm} onSubmit={handleUserSignUp}>\n                <h3>Register With Us</h3>\n                <StyledLabel htmlFor=\"userFirstName\">First Name(optional)</StyledLabel>\n                <StyledInput \n                    type=\"text\" \n                    id=\"userFirstName\" \n                    name=\"user-name\"\n                    autoFocus\n                    placeholder=\"Please enter your first name...\"\n                    value={firstName}\n                    onChange={(e) => {\n                        setFirstName(e.target.value)\n                    }} \n                />   \n                <StyledLabel htmlFor=\"userEmail\">Email</StyledLabel>\n                <StyledInput \n                    type=\"text\" \n                    id=\"userEmail\"\n                    name=\"user-email\" \n                    placeholder=\"Please enter your email...\"\n                    required\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n                <p className={styles.errorMessage}>{userEmailError}</p>   \n                <StyledLabel htmlFor=\"userPassword\">Password</StyledLabel>\n                <StyledInput \n                    type=\"password\" \n                    id=\"userPassword\" \n                    name=\"user-password\"\n                    placeholder=\"Please enter your password...\"\n                    required\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)} \n                />\n                <p className={styles.errorMessage}>{userPasswordError}</p>  \n                <div className={styles.formBtns}>\n                    <button type=\"submit\" className={styles.primaryBtn}>Sign Up</button>\n                    <Link to=\"/login\">\n                    <button className={styles.secondaryBtn}>Login</button>\n                    </Link>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Register;\n",["119","120"],"/Users/jakewood/development/frontendmentor/devjobs/src/containers/Login/Login.jsx",["121","122","123","124"],"import React from 'react';\nimport styles from './Login.module.scss';\nimport { Link } from '@reach/router';\nimport styled from 'styled-components';\n\nconst StyledLabel = styled.label`\n    color: ${props => props.theme.registerLabel};\n    letter-spacing: 0.1em;\n`\n\nconst StyledInput = styled.input`\n    color: ${props => props.theme.registerInput}\n`\n\nconst Login = (props) => { \n\n    const { email, \n            setEmail, \n            password, \n            setPassword, \n            handleUserLogin,\n            handleUserSignup,\n            userHasAccount,\n            setUserHasAccount,\n            userEmailError,\n            userPasswordError \n        } = props;\n\n    return (\n        <div className={styles.formContainer}>\n            <form className={styles.registerForm} onSubmit={handleUserLogin}>\n                <h3>Have an account? Login below!</h3>\n                <StyledLabel htmlFor=\"userEmail\">Email</StyledLabel>\n                <StyledInput \n                    type=\"text\" \n                    autoFocus \n                    required \n                    value={email} \n                    id=\"userEmail\" \n                    placeholder=\"Please enter your email...\"\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n                <p className={styles.errorMessage}>{userEmailError}</p>\n                <StyledLabel htmlFor=\"userPassword\">Password</StyledLabel>\n                <StyledInput \n                    type=\"password\" \n                    id=\"userPassword\" \n                    placeholder=\"Please enter your password...\"\n                    required\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)} \n                />\n                <p className={styles.errorMessage}>{userPasswordError}</p>\n                <div className={styles.formBtns}>\n                    <button type=\"submit\" className={styles.primaryBtn}>Login</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Login;\n","/Users/jakewood/development/frontendmentor/devjobs/src/containers/Login/index.js",[],"/Users/jakewood/development/frontendmentor/devjobs/src/components/JobCard/index.js",[],"/Users/jakewood/development/frontendmentor/devjobs/src/containers/Register/index.js",[],"/Users/jakewood/development/frontendmentor/devjobs/src/firebase.js",[],"/Users/jakewood/development/frontendmentor/devjobs/src/components/JobInfo/index.js",[],{"ruleId":"125","severity":1,"message":"126","line":2,"column":8,"nodeType":"127","messageId":"128","endLine":2,"endColumn":18},{"ruleId":"125","severity":1,"message":"129","line":6,"column":8,"nodeType":"127","messageId":"128","endLine":6,"endColumn":20},{"ruleId":"130","severity":1,"message":"131","line":73,"column":7,"nodeType":"132","messageId":"133","endLine":82,"endColumn":8},{"ruleId":"130","severity":1,"message":"131","line":91,"column":7,"nodeType":"132","messageId":"133","endLine":99,"endColumn":8},{"ruleId":"125","severity":1,"message":"134","line":106,"column":9,"nodeType":"127","messageId":"128","endLine":106,"endColumn":25},{"ruleId":"135","severity":1,"message":"136","line":150,"column":6,"nodeType":"137","endLine":150,"endColumn":8,"suggestions":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"125","severity":1,"message":"143","line":5,"column":18,"nodeType":"127","messageId":"128","endLine":5,"endColumn":31},{"ruleId":"125","severity":1,"message":"144","line":6,"column":10,"nodeType":"127","messageId":"128","endLine":6,"endColumn":20},{"ruleId":"125","severity":1,"message":"145","line":6,"column":22,"nodeType":"127","messageId":"128","endLine":6,"endColumn":31},{"ruleId":"125","severity":1,"message":"146","line":6,"column":33,"nodeType":"127","messageId":"128","endLine":6,"endColumn":45},{"ruleId":"139","replacedBy":"147"},{"ruleId":"141","replacedBy":"148"},{"ruleId":"125","severity":1,"message":"143","line":4,"column":19,"nodeType":"127","messageId":"128","endLine":4,"endColumn":32},{"ruleId":"125","severity":1,"message":"144","line":5,"column":10,"nodeType":"127","messageId":"128","endLine":5,"endColumn":20},{"ruleId":"125","severity":1,"message":"145","line":5,"column":22,"nodeType":"127","messageId":"128","endLine":5,"endColumn":31},{"ruleId":"125","severity":1,"message":"146","line":5,"column":33,"nodeType":"127","messageId":"128","endLine":5,"endColumn":45},{"ruleId":"139","replacedBy":"149"},{"ruleId":"141","replacedBy":"150"},{"ruleId":"125","severity":1,"message":"151","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":25},{"ruleId":"125","severity":1,"message":"152","line":1,"column":27,"nodeType":"127","messageId":"128","endLine":1,"endColumn":36},{"ruleId":"153","severity":1,"message":"154","line":23,"column":21,"nodeType":"155","endLine":23,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":44,"column":21,"nodeType":"155","endLine":44,"endColumn":33},{"ruleId":"158","severity":1,"message":"159","line":71,"column":17,"nodeType":"155","endLine":71,"endColumn":29},{"ruleId":"156","severity":1,"message":"157","line":71,"column":17,"nodeType":"155","endLine":71,"endColumn":29},{"ruleId":"153","severity":1,"message":"154","line":12,"column":13,"nodeType":"155","endLine":12,"endColumn":34},{"ruleId":"153","severity":1,"message":"154","line":21,"column":13,"nodeType":"155","endLine":21,"endColumn":35},{"ruleId":"125","severity":1,"message":"160","line":24,"column":13,"nodeType":"127","messageId":"128","endLine":24,"endColumn":27},{"ruleId":"139","replacedBy":"161"},{"ruleId":"141","replacedBy":"162"},{"ruleId":"125","severity":1,"message":"163","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":14},{"ruleId":"125","severity":1,"message":"164","line":22,"column":13,"nodeType":"127","messageId":"128","endLine":22,"endColumn":29},{"ruleId":"125","severity":1,"message":"160","line":23,"column":13,"nodeType":"127","messageId":"128","endLine":23,"endColumn":27},{"ruleId":"125","severity":1,"message":"165","line":24,"column":13,"nodeType":"127","messageId":"128","endLine":24,"endColumn":30},"no-unused-vars","'JobLibrary' is defined but never used.","Identifier","unusedVar","'NavbarBanner' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'handleUserLogOut' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkUserExists' and 'getJobs'. Either include them or remove the dependency array.","ArrayExpression",["166"],"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"'ThemeProvider' is defined but never used.","'lightTheme' is defined but never used.","'darkTheme' is defined but never used.","'GlobalStyles' is defined but never used.",["167"],["168"],["167"],["168"],"'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'userHasAccount' is assigned a value but never used.",["167"],["168"],"'Link' is defined but never used.","'handleUserSignup' is assigned a value but never used.","'setUserHasAccount' is assigned a value but never used.",{"desc":"169","fix":"170"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [checkUserExists, getJobs]",{"range":"171","text":"172"},[4517,4519],"[checkUserExists, getJobs]"]